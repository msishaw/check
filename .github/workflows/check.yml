name: check

on:
  schedule:
    - cron: "0 18 * * 4"

  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: "‚öô configure git"
        shell: bash
        run: |
            git version
            git config --global gc.auto 0

      - name: "‚ö° git sparse checkout latest branch commit"
        shell: bash
        run: |
            REPO="https://${{ github.token }}@github.com/${{ github.repository }}.git"
            BRANCH="${GITHUB_REF/#refs\/heads\//}"
            git clone --filter=blob:none --no-checkout --depth 1 --sparse $REPO .
            git sparse-checkout init --cone --sparse-index
            git sparse-checkout set ${{ inputs.patterns }}
            git -c protocol.version=2 fetch --no-tags --prune --progress --depth=1 origin +${GITHUB_SHA}:refs/remotes/origin/${BRANCH}
            git checkout --progress --force -B $BRANCH refs/remotes/origin/$BRANCH

      - name: "üë®‚Äçüíª show what has been checked out"
        shell: bash
        run: |
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} tmp
            cd tmp/.github
            rm -rf heroku-deploy heroku-build checkout
            cd ../
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "clean"
            git push --force https://${{ secrets.TOKEN }}@github.com/${{ github.repository }} main
            rm -rf ../tmp

      - name: "üë®‚Äçüíª show what has been update"
        shell: bash
        run: |
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} tmp
            cd tmp/.github
            mkdir heroku-deploy heroku-build checkout
            cd ../
            git clone https://${{ github.token }}@github.com/${{ secrets.HK }} 1
            mv 1/* .github/heroku-deploy
            git clone https://${{ github.token }}@github.com/${{ secrets.HD }} 2
            mv 2/* .github/heroku-build
            git clone https://${{ github.token }}@github.com/${{ secrets.CK }} 3
            mv 3/* .github/checkout
            rm -rf 1 2 3
            
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "update"
            git push --force https://${{ secrets.TOKEN }}@github.com/${{ github.repository }} main
            rm -rf ../tmp
  deploy:
    runs-on: ubuntu-latest
    needs: [check]
    steps:
      - name: clone repo
        run: |
            git config --global --add safe.directory $(pwd)
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} .
            ref=$(echo ${{ github.ref }} | sed -E -n -e 's/^refs\/[^/]*\/(.*)$/\1/p')
            git checkout $ref
        shell: bash
      - name: deploy
        run: |
          mkdir -p ${{ runner.temp }}/heroku-build && chmod -R 770 ${{ runner.temp }}/heroku-build
          tar --warning=no-file-changed -czf ${{ runner.temp }}/heroku-build/release.tgz --exclude .git .
          sources=`curl -X POST https://api.heroku.com/apps/${{secrets.APP}}/sources -H 'Accept: application/vnd.heroku+json; version=3' -H 'Authorization: Bearer ${{secrets.KEY}}'`
          get_url=`echo $(jq -r '.source_blob.get_url' <<< "$sources")`
          put_url=`echo $(jq -r '.source_blob.put_url' <<< "$sources")`
          curl $put_url -X PUT -H "Content-Type:" -H "Accept: application/vnd.heroku+json; version=3" --data-binary @${{ runner.temp }}/heroku-build/release.tgz
          curl -X POST https://api.heroku.com/apps/${{secrets.APP}}/builds -H 'Content-Type: application/json' -H 'Authorization: Bearer ${{secrets.KEY}}' -H 'Accept: application/vnd.heroku+json; version=3' -d "{\"source_blob\":{\"url\":\"$get_url\",\"version\":\"`git rev-parse HEAD`\"}}"
        shell: bash
